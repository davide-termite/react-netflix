{"version":3,"sources":["requests.js","axios.js","components/Row.jsx","components/Banner.jsx","components/Navbar.jsx","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginal","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","id","Banner","setMovie","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0b41c2a.chunk.js","sourcesContent":["const API_KEY = \"021f10396f4dfd536802346c3b13f5d1\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginal: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n});\n\nexport default instance;","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport axios from \"./../axios\";\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"row-title\">{title}</h2>\n\n      <div className=\"poster-container\">\n        {movies.map((movie) => (\n          <img\n            className={`poster ${isLargeRow && \"poster-large\"}`}\n            key={movie.id}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Row;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./../axios\";\nimport requests from \"./../requests\";\n\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginal);\n\n      setMovie(request.data.results[12]);\n\n      return request;\n    }\n    fetchData();\n  });\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"info-container\">\n        <h1 className=\"title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n\n        <div className=\"button-container\">\n          <button className=\"banner-btn\">Play</button>\n          <button className=\"banner-btn\">My List</button>\n        </div>\n\n        <p className=\"description\">{movie?.overview}</p>\n      </div>\n      <div className=\"banner-fade\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav-bg\"}`}>\n      <img\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/200px-Netflix_2015_logo.svg.png\"\n        alt=\"Netflix Logo\"\n        className=\"logo\"\n      />\n      <img\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\n        alt=\"User Avatar\"\n        className=\"avatar\"\n      />\n    </div>\n  );\n};\n\nexport default Navbar;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport requests from \"./requests\";\nimport Row from \"./components/Row\";\nimport Banner from \"./components/Banner\";\nimport Navbar from \"./components/Navbar\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n\n    <Banner />\n\n    <Row\n      title=\"NETFLIX ORIGINALS\"\n      fetchUrl={requests.fetchNetflixOriginal}\n      isLargeRow\n    />\n    <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n    <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n    <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n    <Row\n      title=\"Comedy Movies\"\n      fetchUrl={requests.fetchComedyMovies}\n      isLargeRow\n    />\n    <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n    <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n    <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}